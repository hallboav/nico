version: '3.8'
services:
    db:
        image: postgres:13-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - db_data:/var/lib/postgresql/data:rw
        ports:
            - '55432:5432'
        restart: unless-stopped

    php:
        build:
            context: api
            target: php_fpm
        depends_on:
            - db
        restart: unless-stopped
        volumes:
            - php_socket:/var/run/php
            - ./api:/app:rw,cached
            - /app/vendor
        environment:
            APP_ENV: ${APP_ENV:-dev}
        healthcheck:
            test: ['CMD', 'healthcheck']
            interval: 10s
            timeout: 3s
            retries: 3
            start_period: 30s

    nginx:
        build:
            context: api
            target: nginx
        depends_on:
            - php
        restart: unless-stopped
        volumes:
            - php_socket:/var/run/php
            - ./api/docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
            - ./api/public:/app/public:ro
        ports:
            - '8880:80'

    adminer:
        image: adminer
        restart: always
        ports:
            - '18080:8080'

volumes:
    php_socket:
    db_data:
